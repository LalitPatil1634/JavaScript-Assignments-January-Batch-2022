----------API.js------------

export const database = [
    { name: '21 Jump Street', imgUrl: 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRLCqM8Ispa4waG8tNLPdy6rtiJFOEZUZxdzP-y_BQzfgo953Gb' },
    { name: '22 Jump Street', imgUrl: 'https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQaoamRKQDYxVXvXg6LUl6brQmMdFbpZvOQ2G_nD6u5uq16tiVh' },
    { name: 'Cars', imgUrl: 'https://upload.wikimedia.org/wikipedia/en/3/34/Cars_2006.jpg' },
    { name: 'Cars 2', imgUrl: 'https://upload.wikimedia.org/wikipedia/en/7/7f/Cars_2_Poster.jpg' },
    { name: 'Cars 3', imgUrl: 'https://lumiere-a.akamaihd.net/v1/images/p_cars3_19643_3ab8aca1.jpeg' }
]
export const availability = {
    '21 Jump Street': [1, 2, 5, 8, 9,19,22,20,11],
    '22 Jump Street': [1, 2, 3, 5, 6,10,11,12,13,14,15,16,17, 24],
    'Cars': [1, 2, 3, 4, 5, 6,15,16,17,18,19,20,21,22,23,24],
    'Cars 2': [4, 6, 8,10,11,12,13,14,15,16],
    'Cars 3': [3, 5, 7, 9,20,21,12,13,19,24]
}
const fetchMovieList = async () => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve(database)
        }, 500)
    })
}

const fetchMovieAvailability = async (movieName) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            for (const m in availability) {
                if (m === movieName) resolve(availability[m])
            }
            resolve([])
        }, 500)
    })
}

export { fetchMovieList, fetchMovieAvailability }

--------style.css---------

*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
nav{
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 16px;
  color: #ffffff;
  background-color: blue;
}
.logo{
  flex: 1;
}
nav ul{
  flex: 1;
  display: flex;
  justify-content: space-evenly;
}
nav ul li{
  list-style-type: none;
}
main{
  padding: 1rem;
  width: 100%;
  background-color: #F9B4ED;
}
.movie-holder{
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
.movie-holder a{
  flex: 1;
}
#loader{
  position: relative;
  height: 60px;
  width: 60px;
  display: grid;
  place-content: center;
  border-radius: 50%;
  border: 10px solid #ccc;
}
#loader::before{
  box-sizing: border-box;
  position: absolute;
  content: "";
  height: calc(100% + 22px);
  width: calc(100% + 22px);
  top: -11px;
  left: -11px;
  border-radius: 50%;
  border-style: solid;
  border-width: 10px;
  border-color: #081563 transparent transparent transparent;
  animation: rotate .6s linear infinite;
}
.movie-img-wrapper{
  background-size: cover;
  width: auto;
  height: 250px;
}
#booker{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;

}
#booker-grid-holder{
  display: grid;
  grid-template-columns: repeat(2, 200px);
  gap: 2rem;
}
.booking-grid{
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-gap: .5rem;
  height: 150px;
  width: 200px;
  color: #fff;
  font-weight: 600;
}
#confirm-purchase{
  display: grid;
  place-items: center;
  font-size: 1.2rem;
}
#booking-grid-undefined{
  font-size: auto;
}
.seat{
  display: grid;
  place-content: center;
  /* background-color: pink; */
}
.available-seat{
  background-color: green;
}
.unavailable-seat{
  background-color: red;
}
.select-seat{
  border:4px outset rgb(0, 0, 0);
}

.d-none{
  display: none;
}
.v-none{
  visibility: hidden;
}
input, button[type="submit"]{
  width: 200px;
  height: 35px;
  padding: .5rem;
}
@keyframes rotate {
  from{transform: rotate(0deg);}
  to{transform: rotate(360deg);}
}


----------App.js-------------

import { fetchMovieAvailability, fetchMovieList } from "./api.js"
const mainElement = document.getElementById('main');
let bookerGridHolder = document.getElementById('booker-grid-holder');
let bookTicketBtn = document.getElementById('book-ticket-btn');
let booker = document.getElementById('booker');

async function renderMovies() {
    mainElement.innerHTML = `<div id='loader'></div>`;
    let movies = await fetchMovieList();
    let movieHolder = document.createElement('div');
    movieHolder.setAttribute('class', 'movie-holder');
    movies.forEach(movie => {
        createSeparateMovieTabs(movie, movieHolder);
    });
    mainElement.innerHTML = '';
    mainElement.appendChild(movieHolder);
    setEventToLinks();
}
renderMovies();

function createSeparateMovieTabs(data, wrapper) {
    let a = document.createElement('a');
    a.setAttribute('data-movie-name', `${data.name}`);
    a.classList.add('movie-link');
    a.href = `#${data.name}`;
    a.innerHTML = `<div class="movie" data-id=${data.name}>
                    <div class="movie-img-wrapper" style="background-image:url(${data.imgUrl})"></div>
                    <h4>${data.name}</h4>
               </div>`;
    wrapper.appendChild(a);
}


function setEventToLinks() {
    let movieLinks = document.querySelectorAll('.movie-link');
    movieLinks.forEach(movieLink => {
        movieLink.addEventListener('click', (e) => {
            renderSeatsGrid(movieLink.getAttribute('data-movie-name'));
        })
    })
}

async function renderSeatsGrid(movieName) {
    bookerGridHolder.innerHTML = `<div id='loader'></div>`;
    bookTicketBtn.classList.add('v-none');
    let data = await fetchMovieAvailability(movieName);
    renderSeats(data);
    setEventsToSeats();
}

function renderSeats(data) {
    if (booker.firstElementChild.tagName !== "H3") {
        seatsSelected = [];
        booker.innerHTML = `<h3 class="v-none">Seat Selector</h3>
                              <div id="booker-grid-holder"></div>
                              <button id="book-ticket-btn" class="v-none">Book my seats</button>`;
    }
    bookerGridHolder = document.getElementById('booker-grid-holder');
    bookTicketBtn = document.getElementById('book-ticket-btn');
    bookerGridHolder.innerHTML = '';
    booker.firstElementChild.classList.remove('v-none');
    createSeatsGrid(data)
}

function createSeatsGrid(data) {
    let bookingGrid1 = document.createElement("div");
    let bookingGrid2 = document.createElement("div");
    bookingGrid2.classList.add("booking-grid");
    bookingGrid1.classList.add("booking-grid");
    for (let i = 1; i < 25; i++) {
        let seat = document.createElement("div");
        seat.innerHTML = i;
        seat.setAttribute("id", `booking-grid-${i}`);
        if (data.includes(i)) seat.classList.add("seat", "unavailable-seat");
        else seat.classList.add("seat", "available-seat");
        if (i > 12) bookingGrid2.appendChild(seat);
        else bookingGrid1.appendChild(seat);
    }
    bookerGridHolder.appendChild(bookingGrid1);
    bookerGridHolder.appendChild(bookingGrid2);
    setTicketBooking();
}

let seatsSelected = [];
function setEventsToSeats() {
    let AvailableSeats = document.querySelectorAll('.available-seat');
    AvailableSeats.forEach(seat => {
        seat.addEventListener('click', _ => {
            saveSelectedSeat(seat);
        })
    })
}

function saveSelectedSeat(seat) {
    if (!seat.classList.contains("select-seat")) {
        seat.classList.add('select-seat');
        seatsSelected.push(seat.innerText);
        bookTicketBtn.classList.remove('v-none');
    } else {
        seat.classList.remove('select-seat');
        seatsSelected = seatsSelected.filter(item => seat.innerText !== item);
        if (seatsSelected.length == 0) {
            bookTicketBtn.classList.add('v-none');
        }
    }
}
function setTicketBooking() {
    bookTicketBtn.addEventListener('click', () => {
        if (seatsSelected.length > 0) {
            booker.innerHTML = '';
            confirmTicket();
        }
    })
}

function confirmTicket() {
    let confirmTicketElement = document.createElement('div');
    confirmTicketElement.setAttribute('id', 'confirm-purchase');
    let h3 = document.createElement('h3');
    h3.innerText = `Confirm your booking for seat numbers:${seatsSelected.join(",")}`;
    confirmTicketElement.appendChild(h3);
    confirmTicketElement.appendChild(createForm());
    booker.appendChild(confirmTicketElement);
    success();
}

function createForm() {
    let form = document.createElement("form");
    let formElements = `<input type="email" id="email" placeholder="email" required><br><br>
                         <input type="tel" id="phone" placeholder="phone" required><br><br>
                         <button id="submitBtn" type="submit">Purchase</button>`;
    form.setAttribute("method", "post");
    form.setAttribute("id", "customer-detail-form");
    form.innerHTML = formElements;
    return form;
}

function success() {
    let submitBtn = document.getElementById('submitBtn');
    submitBtn.addEventListener('click', (e) => {
        let form = document.getElementById('customer-detail-form');
        if (form.checkValidity()) {
            e.preventDefault();
            let email = document.getElementById('email').value;
            let phone = document.getElementById('phone').value;
            renderSuccessMessage(email, phone);
        }
    })
}

function renderSuccessMessage(email, phone) {
    booker.innerHTML = '';
    createSuccessMessage(email, phone);
}

function createSuccessMessage(email, phone) {
    let successElement = document.createElement("div");
    successElement.setAttribute("id", "success");
    successElement.innerHTML = `<h3>Booking details</h3>
                               <p>Seats: ${seatsSelected.join(", ")}</p>
                              <p>Email: ${email}</p>
                              <p>Phone number: ${phone}</p>`;
    booker.appendChild(successElement);
}

----------index.html-----------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="./app.js" defer type="module"> </script>
    <link rel="stylesheet" href="./app.css">
    <title>Document</title>
</head>
<body>
    <nav>
        <div class="logo">Movie Book</div>
        <ul>
            <li>Home</li>
            <li>About us</li>
            <li>Know more</li>
        </ul>
    </nav>
    <main id="main">
        
    </main>
    <div id="booker">
        <h3 class="v-none">Seat Selector</h3>
        <div id="booker-grid-holder"></div>
        <button id="book-ticket-btn" class="v-none">Book my seats</button>
    </div>
</body>
</html>