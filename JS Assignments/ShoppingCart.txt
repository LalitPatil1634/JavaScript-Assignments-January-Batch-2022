---------------------HTML---------------------

<h1>Grocery List</h1>
<!--input fields -->
<div class="container">
  <div>
    <label for="item-name-input">Item Name</label>
    <input id="item-name-input" type="text" required name="itemName" placeholder="Enter Item Name">
  </div>
  <div>
    <label for="item-price-input">Price</label>
    <input id="item-price-input" type="text" required name="priceTag" placeholder="Enter Price">
  </div>
  <button type="submit" id="addButton">Add</button>
</div>
<table>
  <thead>
    <tr>
      <th>Sr. No.</th>
      <th>Title</th>
      <th>Price</th>
    </tr>
  </thead>
  <tbody id="table-body">

  </tbody>
  <tfoot>
    <tr>
      <td colspan="2">Total Price</td>
      <td data-ns-test="grandTotal" id="total-price">0</td>
    </tr>
  </tfoot>
</table>

---------------------CSS---------------------

*,
*::after,
*::before {
    
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

h1 {
    font-size: 2rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    text-align: center;
}

.container {
    background-color: #7A82AB;
    padding: 8px 16px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    gap: 1.2rem;
    margin-bottom: 2rem;
}

.container div {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

label {
    font-size: 1rem;
}

input {
    width: 420px;
    height: 32px;
    padding: 8px 16px;
    border-radius: 8px;
    border: 1px solid #ddd;
}

input:focus {
    outline: none;
    border: 1px solid #2b6ce6;
}

::placeholder {
    font-size: 0.8rem;
}

button {
    align-self: center;
    font-size: 1rem;
    padding: 8px 24px;
    border-radius: 8px;
    border: 1px solid transparent;
    background-color: #2b6ce6;
    color: #fff;
    cursor: pointer;
    transition: all 0.6s ease;
}

button:hover {
    background: transparent;
    border: 1px solid #2b6ce6;
    color: #2b6ce6;
}

button:focus {
    outline: none;
}

table {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    width: 100%;
    border-collapse: collapse;
    color: #333;
}

td,
th {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
}

td {
    font-size: 1.2rem;
}

tr:nth-child(even) {
    background-color: #f2f2f2;
}

td:hover {
    background-color: #ddd;
}

th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: center;
    background-color: #2b6ce6;
    color: #fff;
}

---------------------JavaScript---------------------

'use strict';

const itemInputArea = document.querySelector('#item-name-input');
const priceInputArea = document.querySelector('#item-price-input');
const addButton = document.querySelector('#addButton');
const tableBody = document.querySelector('#table-body');
const totalPriceCell = document.querySelector('#total-price');

let itemName, priceValue;
let totalPrice = 0, totalItem = 1;

function insertItem() {
    tableBody.innerHTML += `
        <tr>
            <td>${totalItem++}</td>
            <td data-ns-test="item-name">${itemName}</td>
            <td data-ns-test="item-price">${priceValue}</td>
        </tr>
    `;
}

const resetInputField = function () {
    itemInputArea.value = "";
    priceInputArea.value = "";
}

const getInputValue = function (event) {
    event.preventDefault();
    itemName = itemInputArea.value;
    priceValue = parseInt(priceInputArea.value);
    if (isNaN(priceValue) || itemName === ' ' || itemName.length === 0) {
        resetInputField();
        return;
    }
    totalPrice += priceValue;
    totalPriceCell.textContent = `${totalPrice}`;
    insertItem();
    resetInputField();
}

addButton.addEventListener('click', getInputValue);